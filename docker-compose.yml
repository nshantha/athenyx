version: '3.8'

services:
  neo4j:
    image: neo4j:5.20-enterprise # Or neo4j:5.20-community
    container_name: neo4j_kg
    ports:
      - "7474:7474" # HTTP connector
      - "7687:7687" # Bolt connector
    volumes:
      - neo4j_data:/data
      # Uncomment below lines if you have plugins or conf files
      # - ./neo4j/plugins:/plugins
      # - ./neo4j/conf:/conf
      # - ./neo4j/logs:/logs
    environment:
      # IMPORTANT: Set a strong password!
      # Accept license agreement for Enterprise Edition (required)
      - NEO4J_AUTH=neo4j/pleasechangethispassword
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      # Uncomment below for enabling APOC plugin (often useful)
      #- NEO4J_PLUGINS=["apoc"]
      # Adjust memory settings if needed
      # - NEO4J_server_memory_pagecache_size=1G
      # - NEO4J_server_memory_heap_initial__size=1G
      # - NEO4J_server_memory_heap_max__size=2G
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kg_backend
    ports:
      - "8000:8000" # FastAPI app
    depends_on:
      neo4j:
        condition: service_healthy
    volumes:
      - .:/app # Mount current directory for development reload
    env_file:
      - .env # Load environment variables from .env file
    # command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload # Alternative command if CMD in Dockerfile is not used

  frontend:
    build:
      context: .
      dockerfile: Dockerfile # Can reuse the same Dockerfile if dependencies align
    container_name: kg_frontend
    ports:
      - "8501:8501" # Streamlit default port
    depends_on:
      - backend
    volumes:
      - .:/app # Mount current directory for development reload
    env_file:
      - .env
    command: poetry run streamlit run ui/app.py --server.port 8501 --server.address 0.0.0.0 --server.enableCORS false --server.enableXsrfProtection false

volumes:
  neo4j_data: